[{jason,[]},
 {logger,
     [{sync_threshold,20},
      {utc_log,false},
      {compile_time_purge_level,debug},
      {backends,[console]},
      {console,
          [{format,<<"$time $metadata[$level] $message\n">>},
           {metadata,[request_id]}]},
      {translator_inspect_opts,[]},
      {handle_sasl_reports,false},
      {compile_time_purge_matching,[]},
      {compile_time_application,nil},
      {truncate,8096},
      {handle_otp_reports,true},
      {discard_threshold,500},
      {level,info},
      {discard_threshold_for_error_logger,500},
      {translators,[{'Elixir.Logger.Translator',translate}]}]},
 {stdlib,[]},
 {tasks2,
     [{'Elixir.Tasks2Web.Endpoint',
          [{secret_key_base,
               <<"ZQQjucza7kdr7QrcFCC5or2PAwdeWEYKg6AEeVdo+N3D+sYvH/KyeNkIcUp6GZSn">>},
           {render_errors,
               [{view,'Elixir.Tasks2Web.ErrorView'},
                {accepts,[<<"html">>,<<"json">>]}]},
           {pubsub,
               [{name,'Elixir.Tasks2.PubSub'},
                {adapter,'Elixir.Phoenix.PubSub.PG2'}]},
           {http,[inet6,{port,{system,<<"PORT">>}}]},
           {url,[{host,<<"hw07.ezthrowaway.host">>},{port,80}]},
           {server,true},
           {root,<<".">>},
           {version,nil},
           {cache_static_manifest,<<"priv/static/cache_manifest.json">>}]},
      {'Elixir.Tasks2.Repo',
          [{adapter,'Elixir.Ecto.Adapters.Postgres'},
           {username,<<"tasks">>},
           {password,<<"sub2pews">>},
           {database,<<"tasks2111_prod">>},
           {pool_size,10}]},
      {ecto_repos,['Elixir.Tasks2.Repo']}]},
 {artificery,[]},
 {ranch,[]},
 {decimal,[]},
 {ecto,[]},
 {kernel,
     [{logger_sasl_compatible,false},
      {logger,
          [{handler,default,logger_std_h,
               #{config => #{type => standard_io},
                 formatter =>
                     {logger_formatter,
                         #{legacy_header => true,single_line => false}}}}]},
      {logger_level,notice}]},
 {phoenix_html,[]},
 {phoenix_pubsub,[]},
 {plug,[{validate_header_keys_during_test,true}]},
 {iex,
     [{inspect,[{pretty,true}]},
      {colors,[]},
      {alive_prompt,<<"%prefix(%node)%counter>">>},
      {history_size,20},
      {default_prompt,<<"%prefix(%counter)>">>}]},
 {sasl,[{errlog_type,error},{sasl_error_logger,false}]},
 {elixir,
     [{ansi_enabled,false},
      {time_zone_database,'Elixir.Calendar.UTCOnlyTimeZoneDatabase'}]},
 {gettext,[{default_locale,<<"en">>}]},
 {plug_cowboy,[]},
 {ssl,[]},
 {postgrex,[{type_server_reap_after,180000},{json_library,'Elixir.Jason'}]},
 {plug_crypto,[]},
 {telemetry,[]},
 {runtime_tools,[]},
 {phoenix,
     [{serve_endpoints,false},
      {template_engines,[]},
      {stacktrace_depth,nil},
      {json_library,'Elixir.Jason'},
      {filter_parameters,[<<"password">>]},
      {format_encoders,[]},
      {gzippable_exts,
          [<<".js">>,<<".css">>,<<".txt">>,<<".text">>,<<".html">>,
           <<".json">>,<<".svg">>,<<".eot">>,<<".ttf">>]}]},
 {mime,[{types,#{}}]},
 {db_connection,[]},
 {eex,[]},
 {compiler,[]},
 {cowlib,[]},
 {connection,[]},
 {crypto,[{rand_cache_size,896},{fips_mode,false}]},
 {distillery,[{config_providers,[]}]},
 {public_key,[]},
 {cowboy,[]},
 {asn1,[]},
 {mix,[{colors,[]}]},
 {phoenix_ecto,[{exclude_ecto_exceptions_from_plug,[]}]},
 {ecto_sql,[{postgres_map_type,<<"jsonb">>}]}].
